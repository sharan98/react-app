{"version":3,"sources":["components/department/Department.js","components/course/Course.js","components/syllabus/Syllabus.js","App.js","serviceWorker.js","index.js"],"names":["Department","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","deptNames","_this2","console","log","Axios","get","API","then","res","setState","data","body","depts","forEach","element","push","react_default","a","createElement","key","uuid","v1","react_router_dom","to","concat","className","displayDepts","React","Component","Course","courseCodes","department","dept","courses","courseCode","displayCourses","Syllabus","syllabus","catch","err","semester","course","displaySyllabus","App","react_router","exact","path","render","components_department_Department","_ref","match","course_Course","params","deptName","_ref2","components_syllabus_Syllabus","Boolean","window","location","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fea8abfa.chunk.js","sourcesContent":["import React from 'react';\nimport Axios from 'axios';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport uuid from 'uuid';\nimport './Department.css'\n\nconst API = \"https://gublze4aq4.execute-api.us-east-2.amazonaws.com/test\";\n\nclass Department extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // name: props.name\n            deptNames: []\n        }\n    }\n    \n    componentDidMount() {\n        console.log('==> Department mounted');\n        Axios.get(API + \"/department\")\n        .then(res => {\n            console.log('axios.get.then')\n            console.log(res)\n            this.setState({\n                deptNames: res.data.body\n            })\n        })\n    }\n\n    displayDepts() {\n        var depts = [];\n        console.log('==>displayDepts');\n        \n        console.log(this.state.deptNames);\n        \n        this.state.deptNames.forEach(element => {\n          depts.push(<p key={uuid.v1()}><Link to={`/dept/${element}`} className=\"link\">{element}</Link></p>)\n        });\n        return depts;\n    }\n        \n    render() {\n        return(\n            <div className=\"department\">\n                <h1>Departments</h1>\n                {/* <button >{this.state.name}</button> */}\n                {/* {this.state.name} <br /> */}\n                {this.displayDepts()}\n            </div>\n        )\n    }\n}\n\nexport default Department;","import React from 'react';\nimport Axios from 'axios';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport uuid from 'uuid';\nimport './course.css'\n\nconst API = \"https://gublze4aq4.execute-api.us-east-2.amazonaws.com/test\";\n\nclass Course extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            courseCodes: []\n        }\n    }\n\n    componentDidMount() {\n        var department = this.props.dept;\n        Axios.get(API + \"/department/course?department=\" + department)\n        .then(res => {\n            console.log('axios.get.then')\n            console.log(res)\n            this.setState({\n                courseCodes: res.data.body\n            })\n        })\n    }\n    \n    displayCourses() {\n        var courses = [];\n        console.log('==>displayCourses');\n        console.log(this.state.courseCodes);\n        var department = this.props.dept;\n        \n        this.state.courseCodes.forEach(element => {\n          courses.push(<p key={uuid.v1()} ><Link to={`/${department}/course/${element.courseCode}`} className=\"link\">{element.courseCode}</Link></p>)\n        });\n        return courses;\n    }\n\n    render() {\n        return(\n            <div className=\"course\">\n                <h1>{this.props.dept}</h1>\n                {/* <button >{this.state.name}</button> */}\n                {/* {this.state.name} <br /> */}\n                {this.displayCourses()}\n            </div>\n        )\n    }\n}\n\nexport default Course;","import React from 'react';\nimport Axios from 'axios';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport uuid from 'uuid';\nimport './Syllabus.css'\n\nconst API = \"https://gublze4aq4.execute-api.us-east-2.amazonaws.com/test\";\n\nclass Syllabus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            syllabus: ''\n        }\n    }\n\n    componentDidMount() {\n        var courseCode = this.props.courseCode;\n        Axios.get(API + \"/department/course/syllabus?courseCode=\" + courseCode)\n        .then(res => {\n          console.log('axios.get.then')\n          console.log(res)\n          this.setState({\n            syllabus: res.data.body\n          })\n        })\n        .catch(err => {\n            console.log('axios.get.err');\n            console.log(err);\n        })\n    }\n    \n    displaySyllabus() {\n        var courses = [];\n        console.log('==>displaySyllabus');\n        console.log(this.state.syllabus);\n        var syllabus = this.state.syllabus;\n        if (syllabus === '') {\n            return <div></div>\n        }\n        console.log(syllabus);\n        console.log(syllabus[0].semester);\n        return <div key={uuid.v1()}>\n            <p><em>Course</em>: {syllabus[0].course}</p>\n            <p><em>Semester</em>: {syllabus[0].semester}</p>\n            <p><em>Syllabus</em>: {syllabus[0].syllabus}</p>\n        </div>\n    }\n\n    render() {\n        console.log(\"==> courseCode prop\" + this.props.courseCode);\n        \n        return(\n            <div className=\"syllabus\">\n                <h1>{this.props.courseCode}</h1>\n                {/* <button >{this.state.name}</button> */}\n                {/* {this.state.name} <br /> */}\n                {this.displaySyllabus()}\n            </div>\n        )\n    }\n}\n\nexport default Syllabus;","import React from 'react';\nimport Axios from 'axios';\nimport uuid from 'uuid';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Department from './components/department/Department'\nimport Course from './components/course/Course'\nimport Syllabus from './components/syllabus/Syllabus'\nimport './App.css';\n\nconst API = \"https://gublze4aq4.execute-api.us-east-2.amazonaws.com/test\";\n\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n\n    }\n  }\n  render() {\n    return (\n      <div className=\"app\">\n      <Router>\n        {/* <Department /> */}\n        <Route exact path=\"/\" render={() => \n          <Department />\n        }\n        />\n        <Route exact path=\"/dept/:deptName\" render={({match}) =>\n          <Course dept={match.params.deptName} />\n        }\n        />\n        <Route exact path=\"/:deptName/course/:courseCode\" render={({match}) => \n          <Syllabus courseCode={match.params.courseCode} />\n        }\n        />\n      </Router>\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}